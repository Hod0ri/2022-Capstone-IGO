server {
    listen       80;
    #listen  [::]:80;
    #server_name  localhost;

    #access_log  /var/log/nginx/host.access.log  main;
    location /api {
        
      rewrite ^/api(/.*)$ $1 break;
        #cors 오류를 발생하지 않게끔 처리 ( 필요에 따라서 하면 된다.)
      proxy_hide_header   Access-Control-Allow-Origin;
      add_header          'Access-Control-Allow-Origin' '*';

      # 원본 헤더의 값들을 그대로 리버스 프록시 주소로 연결한다.
      #리버스 프록시의 대상 주소
            proxy_pass        http://node:23712/;
            proxy_redirect    off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
    }
    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

